# Generated by Django 5.2.6 on 2025-09-25 18:57

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FooterBrandInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo_image', models.ImageField(blank=True, null=True, upload_to='footer/logos/')),
                ('main_text', models.CharField(default='Chabighar', max_length=100)),
                ('sub_text', models.CharField(default='(Art Direction and Design Studio)', max_length=200)),
                ('description', models.TextField(default='Your trusted partner for creating memorable wedding experiences. From planning to execution, we make your special day perfect.', help_text='Footer description text')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Footer Brand Info',
                'verbose_name_plural': 'Footer Brand Info',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FooterContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(default='+91 96479 66765', max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(default='booking@chabighar.com', max_length=254)),
                ('whatsapp_number', models.CharField(default='+91 96479 66765', max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('address_line1', models.CharField(default='123 Wedding Street', max_length=200)),
                ('address_line2', models.CharField(default='Kolkata, West Bengal 700001', max_length=200)),
                ('weekday_hours', models.CharField(default='Mon-Fri: 10:00 AM - 8:00 PM', max_length=100)),
                ('weekend_hours', models.CharField(default='Sat-Sun: 11:00 AM - 6:00 PM', max_length=100)),
                ('phone_text', models.CharField(default='Call us anytime', max_length=50)),
                ('whatsapp_text', models.CharField(default='Chat with us', max_length=50)),
                ('email_text', models.CharField(default='Send us an email', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Footer Contact Info',
                'verbose_name_plural': 'Footer Contact Info',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FooterCopyright',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='Â© 2024 Chabighar. All rights reserved.', help_text='Copyright text displayed at the bottom', max_length=200)),
                ('company_name', models.CharField(default='Chabighar', max_length=100)),
                ('company_url', models.URLField(blank=True, help_text='Company website URL', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Footer Copyright',
                'verbose_name_plural': 'Footer Copyright',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FooterQuickLinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('url', models.CharField(help_text="URL path like '/about' or external URL", max_length=200)),
                ('is_external', models.BooleanField(default=False, help_text='Check if this is an external link')),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order (lower numbers first)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Footer Quick Link',
                'verbose_name_plural': 'Footer Quick Links',
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='FooterServices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('url', models.CharField(help_text="URL path like '/services/photography' or external URL", max_length=200)),
                ('is_external', models.BooleanField(default=False, help_text='Check if this is an external link')),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order (lower numbers first)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Footer Service',
                'verbose_name_plural': 'Footer Services',
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='FooterSocialMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('facebook', 'Facebook'), ('instagram', 'Instagram'), ('youtube', 'YouTube'), ('x', 'X (Twitter)'), ('linkedin', 'LinkedIn'), ('pinterest', 'Pinterest'), ('whatsapp', 'WhatsApp'), ('telegram', 'Telegram'), ('tiktok', 'TikTok'), ('snapchat', 'Snapchat')], max_length=20)),
                ('url', models.URLField()),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order (lower numbers first)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Footer Social Media',
                'verbose_name_plural': 'Footer Social Media',
                'ordering': ['order', 'name'],
                'unique_together': {('name',)},
            },
        ),
    ]

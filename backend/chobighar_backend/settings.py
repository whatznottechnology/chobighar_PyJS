"""
Django settings for chobighar_backend project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
import os
from decouple import config

SECRET_KEY = config('DJANGO_SECRET_KEY', default='django-insecure-+4f7g_f82qx$+g#1^*c%1e4dc^-g%eogd_ntht7jewx8d@u8k+')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DJANGO_DEBUG', default=True, cast=bool)

# Environment-aware allowed hosts
ALLOWED_HOSTS = [
    'admin.chobighar.com',
    'www.admin.chobighar.com', 
    'chobighar.com',
    'www.chobighar.com',
    '127.0.0.1',
    'localhost',
    '*'  # Remove this in production
]


# Application definition

INSTALLED_APPS = [
    'unfold',  # Must be before django.contrib.admin
    'unfold.contrib.filters',  # Optional: Unfold filters
    'unfold.contrib.forms',    # Optional: Unfold forms
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'django_filters',
    'ckeditor',
    'ckeditor_uploader',
    'chobighar_backend.apps.ChobigharBackendConfig',  # Core backend with watermark system
    'header',
    'footer',
    'contact',
    'homepage',
    'aboutpage',
    'photoshootpage',
    'portfolio',
    'vendor',
    'search',
    'inquiry',
    'blog',
    'staticpages',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # For serving static files
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'chobighar_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'chobighar_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'  # Set to India timezone for Kolkata business

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'

# Additional locations of static files
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CORS settings - Environment-aware configuration
CORS_ALLOWED_ORIGINS = [
    "https://chobighar.com",
    "https://www.chobighar.com",
    "https://admin.chobighar.com",
    "https://www.admin.chobighar.com",
    "http://localhost:3000",  # Development
    "http://127.0.0.1:3000",  # Development
]

# Add custom CORS origins from environment if specified
CUSTOM_CORS_ORIGINS = config('CORS_ALLOWED_ORIGINS', default='')
if CUSTOM_CORS_ORIGINS:
    CORS_ALLOWED_ORIGINS.extend([origin.strip() for origin in CUSTOM_CORS_ORIGINS.split(',')])

# Additional CORS settings for production
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_ALL_ORIGINS = False

# REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
}

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Static files for production
STATIC_ROOT = BASE_DIR / 'staticfiles'

# ============================================================================
# Django Unfold Admin Theme Configuration
# ============================================================================
from django.templatetags.static import static
from django.urls import reverse_lazy
from django.utils.translation import gettext_lazy as _

UNFOLD = {
    "SITE_TITLE": "chobighar Admin",
    "SITE_HEADER": "chobighar Photography & Events",
    "SITE_URL": "/",
    "SITE_ICON": {
        "light": lambda request: static("admin/img/chobighar.png"),
        "dark": lambda request: static("admin/img/chobighar.png"),
    },
    # "SITE_LOGO": {
    #     "light": lambda request: static("logo-light.svg"),
    #     "dark": lambda request: static("logo-dark.svg"),
    # },
    "SITE_SYMBOL": "camera_alt",  # Symbol from icon set
    "SHOW_HISTORY": True,
    "SHOW_VIEW_ON_SITE": True,
    "ENVIRONMENT": "chobighar_backend.utils.environment_callback",
    "DASHBOARD_CALLBACK": "chobighar_backend.utils.dashboard_callback",
    "LOGIN": {
        "image": lambda request: static("admin/img/chobighar.png"),
        "redirect_after": lambda request: reverse_lazy("admin:index"),
    },
    "STYLES": [
        lambda request: static("admin/css/custom_admin.css"),
    ],
    "SCRIPTS": [
        lambda request: static("admin/js/custom_admin.js"),
    ],
    "COLORS": {
        "primary": {
            "50": "255 235 235",
            "100": "254 202 202",
            "200": "252 165 165",
            "300": "248 113 113",
            "400": "239 68 68",
            "500": "220 38 38",  # Main red color #B22222
            "600": "178 34 34",  # chobighar brand red
            "700": "153 27 27",
            "800": "127 29 29",
            "900": "105 29 29",
            "950": "69 10 10",
        },
    },
    "EXTENSIONS": {
        "modeltranslation": {
            "flags": {
                "en": "ðŸ‡¬ðŸ‡§",
                "bn": "ðŸ‡§ðŸ‡©",
            },
        },
    },
    "SIDEBAR": {
        "show_search": True,
        "show_all_applications": True,
        "navigation": [
            {
                "title": _("Dashboard"),
                "separator": True,
                "items": [
                    {
                        "title": _("Dashboard"),
                        "icon": "dashboard",
                        "link": reverse_lazy("admin:index"),
                    },
                ],
            },
            {
                "title": _("Customer Inquiries"),
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": _("All Inquiries"),
                        "icon": "mail",
                        "link": reverse_lazy("admin:inquiry_inquiry_changelist"),
                    },
                    {
                        "title": _("Follow Ups"),
                        "icon": "reply",
                        "link": reverse_lazy("admin:inquiry_inquiryfollowup_changelist"),
                    },
                ],
            },
            {
                "title": _("Vendor Management"),
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": _("Vendors"),
                        "icon": "store",
                        "link": reverse_lazy("admin:vendor_vendorprofile_changelist"),
                    },
                    {
                        "title": _("Categories"),
                        "icon": "category",
                        "link": reverse_lazy("admin:vendor_vendorcategory_changelist"),
                    },
                    {
                        "title": _("Subcategories"),
                        "icon": "label",
                        "link": reverse_lazy("admin:vendor_vendorsubcategory_changelist"),
                    },
                ],
            },
            {
                "title": _("Portfolio"),
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": _("Portfolios"),
                        "icon": "photo_camera",
                        "link": reverse_lazy("admin:portfolio_portfolio_changelist"),
                    },
                    {
                        "title": _("Categories"),
                        "icon": "folder",
                        "link": reverse_lazy("admin:portfolio_category_changelist"),
                    },
                ],
            },
            {
                "title": _("Content Management"),
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": _("Homepage"),
                        "icon": "home",
                        "link": "/admin/homepage/",
                    },
                    {
                        "title": _("Blog Posts"),
                        "icon": "article",
                        "link": "/admin/blog/",
                    },
                    {
                        "title": _("Header"),
                        "icon": "view_agenda",
                        "link": "/admin/header/",
                    },
                    {
                        "title": _("Footer"),
                        "icon": "view_agenda",
                        "link": "/admin/footer/",
                    },
                    {
                        "title": _("Contact Page"),
                        "icon": "contact_page",
                        "link": "/admin/contact/",
                    },
                    {
                        "title": _("About Page"),
                        "icon": "info",
                        "link": "/admin/aboutpage/",
                    },
                    {
                        "title": _("Static Pages"),
                        "icon": "description",
                        "link": reverse_lazy("admin:staticpages_staticpage_changelist"),
                    },
                ],
            },
            {
                "title": _("Users & Permissions"),
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": _("Users"),
                        "icon": "person",
                        "link": reverse_lazy("admin:auth_user_changelist"),
                    },
                    {
                        "title": _("Groups"),
                        "icon": "group",
                        "link": reverse_lazy("admin:auth_group_changelist"),
                    },
                ],
            },
        ],
    },
    "TABS": [
        {
            "models": [
                "inquiry.inquiry",
            ],
            "items": [
                {
                    "title": _("Inquiry Details"),
                    "link": reverse_lazy("admin:inquiry_inquiry_changelist"),
                },
                {
                    "title": _("Follow Ups"),
                    "link": reverse_lazy("admin:inquiry_inquiryfollowup_changelist"),
                },
            ],
        },
    ],
}

# Security settings
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = 'DENY'

# Production security settings (uncomment when SSL is configured)
if not DEBUG:
    SECURE_SSL_REDIRECT = False  # Set to True when SSL is enabled
    SESSION_COOKIE_SECURE = False  # Set to True when SSL is enabled
    CSRF_COOKIE_SECURE = False  # Set to True when SSL is enabled
    # SECURE_HSTS_SECONDS = 31536000
    # SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    # SECURE_HSTS_PRELOAD = True

# Logging configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs' / 'django.log',
            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG' if DEBUG else 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file'] if not DEBUG else ['console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}

# Create logs directory if it doesn't exist
import os
os.makedirs(BASE_DIR / 'logs', exist_ok=True)

# CKEditor Configuration
CKEDITOR_UPLOAD_PATH = 'uploads/ckeditor/'
CKEDITOR_IMAGE_BACKEND = 'pillow'

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'full',
        'height': 400,
        'width': '100%',
    },
    'blog_content': {
        'toolbar': 'Custom',
        'toolbar_Custom': [
            ['Bold', 'Italic', 'Underline'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['Link', 'Unlink'],
            ['RemoveFormat', 'Source'],
            ['Image', 'Table', 'HorizontalRule'],
            ['Styles', 'Format', 'Font', 'FontSize'],
            ['TextColor', 'BGColor'],
            ['Smiley', 'SpecialChar'],
            ['Youtube', 'Iframe']
        ],
        'height': 500,
        'width': '100%',
        'filebrowserWindowHeight': 725,
        'filebrowserWindowWidth': 940,
        'toolbarCanCollapse': True,
        'mathJaxLib': '//cdn.mathjax.org/mathjax/2.2-latest/MathJax.js?config=TeX-AMS_HTML',
        'tabSpaces': 4,
        'extraPlugins': ','.join([
            'uploadimage',
            'div',
            'autolink',
            'autoembed',
            'embedsemantic',
            'autogrow',
            'widget',
            'lineutils',
            'clipboard',
            'dialog',
            'dialogui',
            'elementspath',
            'youtube',
            'iframe'
        ]),
    }
}
